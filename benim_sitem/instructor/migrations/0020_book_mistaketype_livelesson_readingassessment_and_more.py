# Generated by Django 5.2.1 on 2025-06-14 19:43

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('instructor', '0019_order_quantity'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Kitap Adı')),
                ('author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Yazar')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('level', models.CharField(choices=[('beginner', 'Başlangıç Düzeyi'), ('intermediate', 'Orta Düzey'), ('advanced', 'İleri Düzey'), ('expert', 'Uzman Düzey'), ('native', 'Ana Dil Seviyesi')], default='beginner', max_length=20, verbose_name='Seviye')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Kitap',
                'verbose_name_plural': 'Kitaplar',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='MistakeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Hata Türü Adı')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi?')),
            ],
            options={
                'verbose_name': 'Hata Türü',
                'verbose_name_plural': 'Hata Türleri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LiveLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Ders Başlığı')),
                ('meeting_url', models.URLField(help_text='Zoom, Meet vb. toplantı linki', max_length=500, verbose_name='Toplantı Linki')),
                ('start_time', models.DateTimeField(verbose_name='Ders Tarihi ve Saati')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_lessons_as_instructor', to=settings.AUTH_USER_MODEL, verbose_name='Eğitmen')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_lessons_as_student', to=settings.AUTH_USER_MODEL, verbose_name='Öğrenci')),
            ],
            options={
                'verbose_name': 'Canlı Ders',
                'verbose_name_plural': 'Canlı Dersler',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ReadingAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Değerlendirme Tarihi')),
                ('total_words_read', models.IntegerField(help_text='Metindeki toplam kelime sayısı', verbose_name='Toplam Okunan Kelime Sayısı')),
                ('time_taken_seconds', models.IntegerField(help_text='Metni okuma süresi', verbose_name='Bitirme Süresi (Saniye)')),
                ('words_per_minute', models.FloatField(default=0.0, verbose_name='Okuma Hızı (Kelime/Dk)')),
                ('first_minute_words', models.IntegerField(default=0, verbose_name='İlk Dakikada Okunan Kelime')),
                ('first_minute_mistakes', models.IntegerField(default=0, verbose_name='İlk Dakikadaki Toplam Hata')),
                ('total_mistakes', models.IntegerField(default=0, verbose_name='Toplam Hatalı Kelime')),
                ('comprehension_rate', models.FloatField(default=0.0, help_text='Örn: 0-100 arası', verbose_name='Anlama Oranı (%)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Eğitmen Notları')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_assessments', to=settings.AUTH_USER_MODEL, verbose_name='Eğitmen')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_assessments', to=settings.AUTH_USER_MODEL, verbose_name='Öğrenci')),
            ],
            options={
                'verbose_name': 'Okuma Değerlendirmesi',
                'verbose_name_plural': 'Okuma Değerlendirmeleri',
                'ordering': ['-assessment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReadingMistake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mistake_text', models.CharField(help_text='Hata yapılan kelime veya kelime grubu', max_length=255, verbose_name='Hatalı Kısım')),
                ('text_segment_start_index', models.IntegerField(blank=True, help_text='Metindeki karakter başlangıç indeksi', null=True)),
                ('text_segment_end_index', models.IntegerField(blank=True, help_text='Metindeki karakter bitiş indeksi', null=True)),
                ('word_index_in_text', models.IntegerField(blank=True, help_text='Metin içindeki hata yapılan kelimenin indeksi', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Kaydedilme Zamanı')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Eğitmen Notları')),
                ('mistake_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='instructor.mistaketype', verbose_name='Hata Türü')),
                ('reading_assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mistakes', to='instructor.readingassessment', verbose_name='Okuma Değerlendirmesi')),
            ],
            options={
                'verbose_name': 'Okuma Hatası',
                'verbose_name_plural': 'Okuma Hataları',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TextChapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_number', models.IntegerField(blank=True, null=True, verbose_name='Bölüm Numarası')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bölüm Başlığı')),
                ('content', models.TextField(help_text='Öğrencinin okuyacağı metin.', verbose_name='Metin İçeriği')),
                ('word_count', models.IntegerField(default=0, verbose_name='Toplam Kelime Sayısı')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='instructor.book', verbose_name='Kitap')),
            ],
            options={
                'verbose_name': 'Metin Bölümü',
                'verbose_name_plural': 'Metin Bölümleri',
                'ordering': ['book__title', 'chapter_number'],
                'unique_together': {('book', 'chapter_number')},
            },
        ),
        migrations.AddField(
            model_name='readingassessment',
            name='text_chapter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='instructor.textchapter', verbose_name='Okunan Metin'),
        ),
    ]
